#!/usr/bin/python

import subprocess
import argparse
import adafruit_ads1x15.ads1115 as ADS
from adafruit_ads1x15.analog_in import AnalogIn
import board
import busio
# ------------------------------------------------------------- #
# Python script for reading the overall status of all devices.
# Lauren Dawson, 08.04.2016
# ------------------------------------------------------------- #
statusString = ""

#Insert options for t and d mode inputs
parser = argparse.ArgumentParser(description='Chose Readout Mode')
parser.add_argument('input', metavar='RO', type=str, choices = ['d', 't'],
                   help='Desired Variable Readout')

args = parser.parse_args()
mode = args.input

# Readout temperatures from ADC:
print("Temperature: ")
print("------------")
if mode == 'd':
    
tempReadout = subprocess.check_output(['/home/supernemo/ADC_Monitoring/TempReadout2.py', 'd'])
    tempString = tempReadout.rstrip("\n")
    print(tempString)
    statusString += "Temperature: \n" + "----------- \n" +tempString + "\n"
elif mode == 't':
    tempReadouttest = subprocess.check_output(['/home/supernemo/ADC_Monitoring/TempReadout2.py', 't'])
    tempStringtest = tempReadouttest.rstrip("\n")
    print(tempStringtest)
    statusString += "Temperature: \n" + "----------- \n" +tempStringtest + "\n"

# Readout flow rate information:
print("Flow Monitoring: ")
print("----------------")
if mode == 'd':
    flowReadout = subprocess.check_output(['/home/supernemo/FlowRateMonitoring/PR4000B.py', 'd'])
    flowString = flowReadout.rstrip("\n")
    print(flowString)
    statusString += "Flow Monitoring: \n" + "---------------- \n" +flowString +"\n"
elif mode == 't':
    flowReadouttest = subprocess.check_output(['/home/supernemo/FlowRateMonitoring/PR4000B.py', 't'])
    flowStringtest = flowReadouttest.rstrip("\n")
    print(flowStringtest)
    statusString += "Flow Monitoring: \n" + "---------------- \n" +flowStringtest +"\n"

# Readout values from Haake Bath:
#print("Haake Values: ")
#print("-------------")
#if mode == 'd':
#    haakeReadout = subprocess.check_output(['/home/supernemo/HaakeDL30Monitoring/HaakeValues.py', 'd'])
#    haakeString = haakeReadout.rstrip("\n")
#    print(haakeString)
#    statusString += "Haake Values: \n" + "------------- \n" +haakeString +"\n"
#elif mode == 't':
#    haakeReadouttest = subprocess.check_output(['/home/supernemo/HaakeDL30Monitoring/HaakeValues.py', 't'])
#    haakeStringtest = haakeReadouttest.rstrip("\n")
#    print(haakeStringtest)
#    statusString += "Haake Values: \n" + "------------- \n" +haakeStringtest +"\n"

# Readout status of the Haake Bath:
#print("Haake Status: ")
#print("-------------")
#if mode == 'd':
#    haakeStatusReadout = subprocess.check_output(['/home/supernemo/HaakeDL30Monitoring/OperatingStatus.py', 'd'])
#    haakeStatusString = haakeStatusReadout.rstrip("\n")
#    print(haakeStatusString)
#    statusString += "Haake Status: \n" + "------------- \n" +haakeStatusString +"\n"
#elif mode == 't':
#    haakeStatusReadouttest = subprocess.check_output(['/home/supernemo/HaakeDL30Monitoring/OperatingStatus.py', 't'])
#    haakeStatusStringtest = haakeStatusReadouttest.rstrip("\n")
#    print(haakeStatusStringtest)
#    statusString += "Haake Status: \n" + "------------- \n" +haakeStatusStringtest +"\n"

# Readout pressure:
print("Pressure: ")
print("---------")
if mode == 'd':
    pressureReadout = subprocess.check_output(['/home/supernemo/PressureMonitoring/EV94.py','d'])
    pressureString = pressureReadout.rstrip("\n")
    print(pressureString)
    statusString += "Pressure: \n" + "--------- \n" +pressureString +"\n"
elif mode == 't':
    pressureReadouttest = subprocess.check_output(['/home/supernemo/PressureMonitoring/EV94.py','t'])
    pressureStringtest = pressureReadouttest.rstrip("\n")
    print(pressureStringtest)
    statusString += "Pressure: \n" + "--------- \n" +pressureStringtest +"\n"

# Check error status
overallStatus = ""
print ("Overall Status: ")
print ("---------------")
#if mode == 't':
#	if 'Alarm' in haakeStatusStringtest :
#		overallStatus += "ALARM "
#	if 'Error' in tempStringtest or 'Error' in flowStringtest or 'Error' in haakeStringtest or 'Error' in pressureStringtest :
#       	overallStatus += "WARNING "
#
#elif mode == 'd':
#	if 'Alarm' in haakeStatusString :
#		overallStatus += "ALARM "
#	if 'Error' in tempString or 'Error' in flowString or 'Error' in haakeString or 'Error' in pressureString :
#		overallStatus += "WARNING "
#
#
if overallStatus == "" :
	overallStatus += "GOOD"

print (overallStatus)
statusString += "Overall Status: \n" + "--------------- \n" +overallStatus +"\n"

# To separate files for the log (appending) and current values :
f_log = open('/home/supernemo/OverallStatus_log.txt','a')
f_cur = open('/home/supernemo/OverallStatus_cur.txt','w')
f_log.write(statusString)
f_cur.write(statusString)
